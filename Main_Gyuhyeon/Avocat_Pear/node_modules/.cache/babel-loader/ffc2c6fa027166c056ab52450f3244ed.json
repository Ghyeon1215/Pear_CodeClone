{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rbgus\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\User_Frontend\\\\CodeClone(pear)\\\\Pear_CodeClone\\\\Main_Gyuhyeon\\\\Avocat_Pear\\\\src\\\\components\\\\ReportWriting\\\\ReportWritingPath\\\\ReportWritingTeam\\\\TeamReportWriting.jsx\";\nimport React, { useState } from \"react\";\nimport ReportWritingModal from \"../../Modal/ReportWritingModal\";\nimport TeamSubmitReportModal from \"../../Modal/SubmitRequest/TeamReportRequest/TeamSubmitReportModal\";\nimport SelectedUsers from \"../../Modal/SelectedUsers\";\nimport * as S from \"../../../styled/ReportWriting/ReportWritingPath/ReportWritingTeam/style\";\nimport { link } from \"../../../../assets\";\nimport { github as gitgubimg } from \"../../../../assets\";\nimport axios from \"axios\";\n\nconst TeamReportWriting = ({\n  type,\n  access,\n  field,\n  grade\n}) => {\n  const [state, setState] = useState(\"hidden\");\n  const [hei, setHei] = useState(\"0\");\n  const [myopa, setMyOpa] = useState(\"1\");\n  const [open, setOpen] = useState(\"hidden\");\n  const [myHei, setMyHei] = useState(\"0\");\n  const [opas, setOpas] = useState(\"1\");\n  const [tags, setTags] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [github, setGithub] = useState(\"\");\n  const [teamName, setTeamName] = useState(\"\");\n  const [searchList, setSearchList] = useState([]);\n  const [selectedUserList, setSelectedUserList] = useState([]);\n  const ACCESS_TOKEN = localStorage.getItem(\"access-token\");\n  const MainUrl = \"http://211.38.86.92:8005\";\n\n  const onTitleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  const onDescriptionChange = e => {\n    setDescription(e.target.value);\n  };\n\n  const onGithubChange = e => {\n    setGithub(e.target.value);\n  };\n\n  const onTeamNameChange = e => {\n    setTeamName(e.target.value);\n  };\n\n  const onClick = () => {\n    setState(\"visible\");\n    setHei(\"280px\");\n    setMyOpa(\"1\");\n  };\n\n  const teamBtnClick = e => {\n    setOpen(\"visible\");\n    setMyHei(\"450px\");\n    setOpas(\"1\");\n  };\n\n  const onLanguageChange = e => {\n    if (e.key === \"Enter\" && e.target.value.trim()) {\n      const newTags = [...tags];\n      newTags[tags.length] = e.target.value;\n      setTags(newTags);\n      e.target.value = \"\";\n    } else if (e.key === \",\" && e.target.value.trim()) {\n      const newTags = [...tags];\n      newTags[tags.length] = e.target.value;\n      setTags(newTags);\n      e.target.value = \"\";\n    }\n  };\n\n  const onLanguageClick = index => {\n    const delTags = [...tags];\n    delTags.splice(index, 1);\n    setTags(delTags);\n  };\n\n  const onClickFile = () => {\n    const inputElement = document.createElement(\"input\");\n    inputElement.setAttribute(\"type\", \"file\");\n    inputElement.setAttribute(\"accept\", \".pdf, .hwp\");\n    inputElement.click();\n\n    inputElement.onchange = () => {\n      const prevFiles = [...files];\n\n      for (const file of inputElement.files) {\n        prevFiles.push(file);\n      }\n\n      console.log(inputElement.files);\n      setFiles(prevFiles);\n      console.log(inputElement.value, inputElement.files[0].name);\n    };\n  };\n\n  const onDelClickFile = index => {\n    const delFile = [...files];\n    delFile.splice(index, 1);\n    setFiles(delFile);\n  };\n\n  const attachFiles = index => {\n    if (files.length !== 0 && files.length < 2) {\n      return files.map((file, i) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          onClick: () => onDelClickFile(i),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, file.name);\n      });\n    } else if (files.length > 1) {\n      alert(\"파일은 하나만 추가할 수 있습니다.\");\n      files.splice(index, 1);\n      return false;\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, \"\\uD300\\uC774 \\uC791\\uC131\\uD55C \\uAC1C\\uBC1C \\uBCF4\\uACE0\\uC11C\\uC758 \\uD30C\\uC77C\\uC744 \\uC62C\\uB824\\uC8FC\\uC138\\uC694.\");\n  };\n\n  const isSaveData = () => {\n    axios.post(`${MainUrl}/report/team`, {\n      title: `${title}`,\n      description: `${description}`,\n      languages: tags,\n      type: `${type}`,\n      access: `${access}`,\n      field: `${field}`,\n      grade: `${grade}`,\n      isSubmitted: true,\n      fileName: `${files[0].name}`,\n      github: `${github}`,\n      teamName: `${teamName}`,\n      members: selectedUserList.map(users => {\n        return users.user.email;\n      })\n    }, {\n      headers: {\n        \"Contect-Type\": \"application/json\",\n        Authorization: `Bearer ${ACCESS_TOKEN}`\n      }\n    }).then(() => {\n      console.log(\"임시저장 성공\");\n    }).catch(() => {\n      console.log(\"임시저장 실패\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TeamSubmitReportModal, {\n    setState: setState,\n    setHei: setHei,\n    setMyOpa: setMyOpa,\n    state: state,\n    hei: hei,\n    myopa: myopa,\n    title: title,\n    description: description,\n    tags: tags,\n    type: type,\n    access: access,\n    field: field,\n    grade: grade,\n    files: files,\n    github: github,\n    teamName: teamName,\n    selectedUserList: selectedUserList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReportWritingModal, {\n    setOpen: setOpen,\n    setMyHei: setMyHei,\n    open: open,\n    myHei: myHei,\n    opas: opas,\n    searchList: searchList,\n    setSearchList: setSearchList,\n    selectedUserList: selectedUserList,\n    setSelectedUserList: setSelectedUserList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(S.ReportBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.ReportMain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(S.ReportTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uAC1C\\uBC1C \\uBCF4\\uACE0\\uC11C\\uC758 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    onChange: onTitleChange,\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(S.UseLang, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, tags.map((tag, i) => {\n    return /*#__PURE__*/React.createElement(S.Tag, {\n      onClick: () => onLanguageClick(i),\n      index: i,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, tag);\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uAC1C\\uBC1C\\uC5D0 \\uC0AC\\uC6A9\\uD55C \\uC5B8\\uC5B4\\uB4E4\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    onKeyPress: onLanguageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(S.ReprotWriteBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"writingbox\",\n    rows: \"15\",\n    cols: \"40\",\n    minLength: \"10\",\n    placeholder: \"\\uD300\\uC774 \\uC791\\uC131\\uD55C \\uAC1C\\uBC1C\\uBCF4\\uACE0\\uC11C\\uC5D0 \\uB300\\uD55C \\uC18C\\uAC1C\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    onChange: onDescriptionChange,\n    style: {\n      resize: \"none\"\n    },\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(S.LinkBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: gitgubimg,\n    alt: \"gitgub-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"\\uD300\\uC758 GITHUB \\uB9C1\\uD06C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694 (\\uC120\\uD0DD)\",\n    onChange: onGithubChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(S.AttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(S.inAttachFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: link,\n    alt: \"attachfile\",\n    onClick: onClickFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }), attachFiles()))), /*#__PURE__*/React.createElement(S.SubmitBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(S.MakeTeam, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(S.SetTeamName, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(S.TeamNameBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(S.InputTeamName, {\n    type: \"text\",\n    placeholder: \"\\uD300\\uC758 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n    onChange: onTeamNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(S.MtBtnBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(S.MemberResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(S.ResultHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 19\n    }\n  }, \"TEAM MEMBER\"), /*#__PURE__*/React.createElement(S.ResultBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 19\n    }\n  }, selectedUserList.map(selectedUser => {\n    return /*#__PURE__*/React.createElement(SelectedUsers, {\n      key: selectedUser.id,\n      selectedUser: selectedUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(S.MtFlexBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(S.MtBtn, {\n    onClick: teamBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, \"\\uD300 \\uB9CC\\uB4E4\\uAE30\"))))), /*#__PURE__*/React.createElement(S.SaveSubBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(S.SaveBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: isSaveData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  }, \"\\uC784\\uC2DC\\uC800\\uC7A5\")), /*#__PURE__*/React.createElement(S.SubBtn, {\n    onClick: onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uCD9C\\uD558\\uAE30\"))))));\n};\n\nexport default TeamReportWriting;","map":{"version":3,"sources":["C:/Users/rbgus/OneDrive/바탕 화면/User_Frontend/CodeClone(pear)/Pear_CodeClone/Main_Gyuhyeon/Avocat_Pear/src/components/ReportWriting/ReportWritingPath/ReportWritingTeam/TeamReportWriting.jsx"],"names":["React","useState","ReportWritingModal","TeamSubmitReportModal","SelectedUsers","S","link","github","gitgubimg","axios","TeamReportWriting","type","access","field","grade","state","setState","hei","setHei","myopa","setMyOpa","open","setOpen","myHei","setMyHei","opas","setOpas","tags","setTags","files","setFiles","title","setTitle","description","setDescription","setGithub","teamName","setTeamName","searchList","setSearchList","selectedUserList","setSelectedUserList","ACCESS_TOKEN","localStorage","getItem","MainUrl","onTitleChange","e","target","value","onDescriptionChange","onGithubChange","onTeamNameChange","onClick","teamBtnClick","onLanguageChange","key","trim","newTags","length","onLanguageClick","index","delTags","splice","onClickFile","inputElement","document","createElement","setAttribute","click","onchange","prevFiles","file","push","console","log","name","onDelClickFile","delFile","attachFiles","map","i","alert","isSaveData","post","languages","isSubmitted","fileName","members","users","user","email","headers","Authorization","then","catch","tag","resize","selectedUser","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReportWritingModal from \"../../Modal/ReportWritingModal\";\r\nimport TeamSubmitReportModal from \"../../Modal/SubmitRequest/TeamReportRequest/TeamSubmitReportModal\";\r\nimport SelectedUsers from \"../../Modal/SelectedUsers\";\r\nimport * as S from \"../../../styled/ReportWriting/ReportWritingPath/ReportWritingTeam/style\";\r\nimport { link } from \"../../../../assets\";\r\nimport { github as gitgubimg } from \"../../../../assets\";\r\nimport axios from \"axios\";\r\n\r\nconst TeamReportWriting = ({ type, access, field, grade }) => {\r\n  const [state, setState] = useState(\"hidden\");\r\n  const [hei, setHei] = useState(\"0\");\r\n  const [myopa, setMyOpa] = useState(\"1\");\r\n  const [open, setOpen] = useState(\"hidden\");\r\n  const [myHei, setMyHei] = useState(\"0\");\r\n  const [opas, setOpas] = useState(\"1\");\r\n  const [tags, setTags] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [teamName, setTeamName] = useState(\"\");\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [selectedUserList, setSelectedUserList] = useState([]);\r\n\r\n  const ACCESS_TOKEN = localStorage.getItem(\"access-token\");\r\n  const MainUrl = \"http://211.38.86.92:8005\";\r\n\r\n  const onTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const onGithubChange = (e) => {\r\n    setGithub(e.target.value);\r\n  };\r\n\r\n  const onTeamNameChange = (e) => {\r\n    setTeamName(e.target.value);\r\n  };\r\n\r\n  const onClick = () => {\r\n    setState(\"visible\");\r\n    setHei(\"280px\");\r\n    setMyOpa(\"1\");\r\n  };\r\n\r\n  const teamBtnClick = (e) => {\r\n    setOpen(\"visible\");\r\n    setMyHei(\"450px\");\r\n    setOpas(\"1\");\r\n  };\r\n\r\n  const onLanguageChange = (e) => {\r\n    if (e.key === \"Enter\" && e.target.value.trim()) {\r\n      const newTags = [...tags];\r\n      newTags[tags.length] = e.target.value;\r\n      setTags(newTags);\r\n      e.target.value = \"\";\r\n    } else if (e.key === \",\" && e.target.value.trim()) {\r\n      const newTags = [...tags];\r\n      newTags[tags.length] = e.target.value;\r\n      setTags(newTags);\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const onLanguageClick = (index) => {\r\n    const delTags = [...tags];\r\n    delTags.splice(index, 1);\r\n    setTags(delTags);\r\n  };\r\n\r\n  const onClickFile = () => {\r\n    const inputElement = document.createElement(\"input\");\r\n    inputElement.setAttribute(\"type\", \"file\");\r\n    inputElement.setAttribute(\"accept\", \".pdf, .hwp\");\r\n    inputElement.click();\r\n    inputElement.onchange = () => {\r\n      const prevFiles = [...files];\r\n      for (const file of inputElement.files) {\r\n        prevFiles.push(file);\r\n      }\r\n      console.log(inputElement.files);\r\n      setFiles(prevFiles);\r\n      console.log(inputElement.value, inputElement.files[0].name);\r\n    };\r\n  };\r\n\r\n  const onDelClickFile = (index) => {\r\n    const delFile = [...files];\r\n    delFile.splice(index, 1);\r\n    setFiles(delFile);\r\n  };\r\n\r\n  const attachFiles = (index) => {\r\n    if (files.length !== 0 && files.length < 2) {\r\n      return files.map((file, i) => {\r\n        return (\r\n          <div key={i} onClick={() => onDelClickFile(i)}>\r\n            {file.name}\r\n          </div>\r\n        );\r\n      });\r\n    } else if (files.length > 1) {\r\n      alert(\"파일은 하나만 추가할 수 있습니다.\");\r\n      files.splice(index, 1);\r\n      return false;\r\n    }\r\n    return <span>팀이 작성한 개발 보고서의 파일을 올려주세요.</span>;\r\n  };\r\n\r\n  const isSaveData = () => {\r\n    axios\r\n      .post(\r\n        `${MainUrl}/report/team`,\r\n        {\r\n          title: `${title}`,\r\n          description: `${description}`,\r\n          languages: tags,\r\n          type: `${type}`,\r\n          access: `${access}`,\r\n          field: `${field}`,\r\n          grade: `${grade}`,\r\n          isSubmitted: true,\r\n          fileName: `${files[0].name}`,\r\n          github: `${github}`,\r\n          teamName: `${teamName}`,\r\n          members: selectedUserList.map((users) => {\r\n            return users.user.email;\r\n          }),\r\n        },\r\n        {\r\n          headers: {\r\n            \"Contect-Type\": \"application/json\",\r\n            Authorization: `Bearer ${ACCESS_TOKEN}`,\r\n          },\r\n        }\r\n      )\r\n      .then(() => {\r\n        console.log(\"임시저장 성공\");\r\n      })\r\n      .catch(() => {\r\n        console.log(\"임시저장 실패\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TeamSubmitReportModal\r\n        setState={setState}\r\n        setHei={setHei}\r\n        setMyOpa={setMyOpa}\r\n        state={state}\r\n        hei={hei}\r\n        myopa={myopa}\r\n        title={title}\r\n        description={description}\r\n        tags={tags}\r\n        type={type}\r\n        access={access}\r\n        field={field}\r\n        grade={grade}\r\n        files={files}\r\n        github={github}\r\n        teamName={teamName}\r\n        selectedUserList={selectedUserList}\r\n      />\r\n      <ReportWritingModal\r\n        setOpen={setOpen}\r\n        setMyHei={setMyHei}\r\n        open={open}\r\n        myHei={myHei}\r\n        opas={opas}\r\n        searchList={searchList}\r\n        setSearchList={setSearchList}\r\n        selectedUserList={selectedUserList}\r\n        setSelectedUserList={setSelectedUserList}\r\n      />\r\n\r\n      <S.ReportBody>\r\n        <S.ReportMain>\r\n          <S.ReportTitle>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"개발 보고서의 제목을 입력해주세요\"\r\n              onChange={onTitleChange}\r\n              value={title}\r\n            />\r\n          </S.ReportTitle>\r\n          <S.UseLang>\r\n            {tags.map((tag, i) => {\r\n              return (\r\n                <S.Tag onClick={() => onLanguageClick(i)} index={i} key={i}>\r\n                  {tag}\r\n                </S.Tag>\r\n              );\r\n            })}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"개발에 사용한 언어들을 입력해주세요\"\r\n              onKeyPress={onLanguageChange}\r\n            />\r\n          </S.UseLang>\r\n          <S.ReprotWriteBox>\r\n            <textarea\r\n              name=\"writingbox\"\r\n              rows=\"15\"\r\n              cols=\"40\"\r\n              minLength=\"10\"\r\n              placeholder=\"팀이 작성한 개발보고서에 대한 소개글을 입력해주세요\"\r\n              onChange={onDescriptionChange}\r\n              style={{ resize: \"none\" }}\r\n              value={description}\r\n            ></textarea>\r\n          </S.ReprotWriteBox>\r\n          <S.LinkBox>\r\n            <span>\r\n              <div>\r\n                <img src={gitgubimg} alt=\"gitgub-link\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"팀의 GITHUB 링크를 입력해주세요 (선택)\"\r\n                  onChange={onGithubChange}\r\n                />\r\n              </div>\r\n            </span>\r\n          </S.LinkBox>\r\n          <S.AttachFile>\r\n            <S.inAttachFile>\r\n              <img src={link} alt=\"attachfile\" onClick={onClickFile} />\r\n              {attachFiles()}\r\n            </S.inAttachFile>\r\n          </S.AttachFile>\r\n        </S.ReportMain>\r\n        <S.SubmitBox>\r\n          <S.MakeTeam>\r\n            <span>\r\n              <S.SetTeamName>\r\n                <S.TeamNameBox>\r\n                  <S.InputTeamName\r\n                    type=\"text\"\r\n                    placeholder=\"팀의 이름을 입력해주세요\"\r\n                    onChange={onTeamNameChange}\r\n                  />\r\n                </S.TeamNameBox>\r\n              </S.SetTeamName>\r\n              <S.MtBtnBox>\r\n                <S.MemberResult>\r\n                  <S.ResultHeader>TEAM MEMBER</S.ResultHeader>\r\n                  <S.ResultBody>\r\n                    {selectedUserList.map((selectedUser) => {\r\n                      return (\r\n                        <SelectedUsers\r\n                          key={selectedUser.id}\r\n                          selectedUser={selectedUser}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </S.ResultBody>\r\n                </S.MemberResult>\r\n                <S.MtFlexBox>\r\n                  <S.MtBtn onClick={teamBtnClick}>팀 만들기</S.MtBtn>\r\n                </S.MtFlexBox>\r\n              </S.MtBtnBox>\r\n            </span>\r\n          </S.MakeTeam>\r\n          <S.SaveSubBtn>\r\n            <S.SaveBtn>\r\n              <div onClick={isSaveData}>임시저장</div>\r\n            </S.SaveBtn>\r\n            <S.SubBtn onClick={onClick}>\r\n              <div>제출하기</div>\r\n            </S.SubBtn>\r\n          </S.SaveSubBtn>\r\n        </S.SubmitBox>\r\n      </S.ReportBody>\r\n    </>\r\n  );\r\n};\r\nexport default TeamReportWriting;\r\n"]},"metadata":{},"sourceType":"module"}