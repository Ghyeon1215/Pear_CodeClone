{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rbgus\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\User_Frontend\\\\CodeClone(pear)\\\\Pear_CodeClone\\\\Main_Gyuhyeon\\\\Avocat_Pear\\\\src\\\\components\\\\ReportWriting\\\\Modal\\\\ReportWritingModal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport LeftUserMapping from \"./UserList/LeftUserMapping\";\nimport LoadingPage from \"../LoadingPage\";\nimport RightUserMapping from \"./UserList/RightUserMapping\";\nimport * as S from \"../../styled/ReportWriting/Modal/ReportWritingModalStyle\";\nimport { Close, searchImg, NowTeam, clickNT } from \"../../../assets\";\nimport { request } from \"../../../utils/axios/axios\";\nimport axios from \"axios\";\n\nconst ReportWritingModal = ({\n  setOpen,\n  setMyHei,\n  open,\n  myHei,\n  opas,\n  searchList,\n  setSearchList,\n  selectedUserList,\n  setSelectedUserList\n}) => {\n  const [toggled, setToggled] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(\"hidden\");\n  const [loading, setLoading] = useState(true);\n  const ACCESS_TOKEN = localStorage.getItem(\"access-token\");\n  const REFRESH_TOKEN = localStorage.getItem(\"refresh-token\");\n  const baseUrl = \"http://211.38.86.92\";\n  useEffect(() => {\n    async function getUsers(getUser) {\n      try {\n        getUser = await request(\"get\", `/account?name=`, {\n          Authorization: `Bearer ${ACCESS_TOKEN}`\n        });\n        setLoading(false);\n      } catch (e) {\n        alert(e);\n      }\n\n      setSearchList(getUser.data.userResponses.map((user, index) => ({\n        id: index + 1,\n        user\n      })));\n    }\n\n    getUsers();\n  }, [ACCESS_TOKEN, setSearchList]);\n  if (loading) return /*#__PURE__*/React.createElement(LoadingPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  });\n\n  const loadUserSearchList = async search => {\n    try {\n      let response = await request(\"get\", `/account?name=${search}`, {\n        Authorization: `Bearer ${ACCESS_TOKEN}`\n      });\n      setSearchList(response.data.userResponses.map((user, index) => ({\n        id: index + 1,\n        user\n      })));\n      setLoading(false);\n    } catch (e) {\n      switch (e.data.status) {\n        case 400:\n          alert(\"\");\n          break;\n\n        case 401:\n          axios.put(`${baseUrl}:8005/auth`, undefined, {\n            headers: {\n              \"X-Refresh-Token\": REFRESH_TOKEN\n            }\n          }).then(res => {\n            if (res.data.access_token) {\n              localStorage.setItem(\"access-token\", ACCESS_TOKEN);\n            }\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  const onClickLeft = (id, userInfo) => {\n    const user = selectedUserList.find(user => {\n      if (user.id === id) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!user) {\n      setSelectedUserList([userInfo, ...selectedUserList]);\n    } else {\n      setSelectedUserList(selectedUserList.filter(user => user.id !== id));\n    }\n  };\n\n  const onClickRight = id => {\n    setSelectedUserList(selectedUserList.filter(user => user.id !== id));\n  };\n\n  const onSearchChange = e => {\n    loadUserSearchList(e.target.value);\n  };\n\n  const onLeftModalClose = () => {\n    setOpen(\"hidden\");\n    setMyHei(\"0\");\n  };\n\n  const onRightModalClose = () => {\n    setIsModalOpen(\"hidden\");\n    setToggled(!toggled);\n  };\n\n  const rightModalOpen = () => {\n    setToggled(!toggled);\n    setIsModalOpen(\"visible\");\n  };\n\n  const renderSelectedUser = () => {\n    return selectedUserList.map(selectedUser => {\n      return /*#__PURE__*/React.createElement(RightUserMapping, {\n        key: selectedUser.id,\n        selectedUser: selectedUser,\n        onClickRight: onClickRight,\n        selectedUserList: selectedUserList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(S.Div, {\n    visibility: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(S.LeftModalMain, {\n    height: myHei,\n    opas: opas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(S.LeftModalSort, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(S.LeftCloseBtn, {\n    onClick: onLeftModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, toggled === !true && /*#__PURE__*/React.createElement(\"img\", {\n    src: Close,\n    alt: \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 39\n    }\n  }))), /*#__PURE__*/React.createElement(S.SearchInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(S.BorderInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: onSearchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: searchImg,\n    alt: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(S.LeftSearchResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, searchList && searchList.map(userInfo => {\n    return /*#__PURE__*/React.createElement(LeftUserMapping, {\n      key: userInfo.id,\n      userInfo: userInfo,\n      onClickLeft: onClickLeft,\n      selectedUserList: selectedUserList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(S.TeamState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(S.BorderState, {\n    onClick: rightModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"\\uD604\\uC7AC \\uD300 \\uC0C1\\uD0DC\"), toggled === true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: clickNT,\n    alt: \"clickNT\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"img\", {\n    src: NowTeam,\n    alt: \"NowTeam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }))))), toggled && /*#__PURE__*/React.createElement(S.RightModalMain, {\n    visibility: isModalOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(S.RightModalSort, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(S.RightCloseBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Close,\n    alt: \"Close\",\n    onClick: onRightModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(S.RightSearchResult, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, renderSelectedUser())))));\n};\n\nexport default ReportWritingModal;","map":{"version":3,"sources":["C:/Users/rbgus/OneDrive/바탕 화면/User_Frontend/CodeClone(pear)/Pear_CodeClone/Main_Gyuhyeon/Avocat_Pear/src/components/ReportWriting/Modal/ReportWritingModal.jsx"],"names":["React","useState","useEffect","LeftUserMapping","LoadingPage","RightUserMapping","S","Close","searchImg","NowTeam","clickNT","request","axios","ReportWritingModal","setOpen","setMyHei","open","myHei","opas","searchList","setSearchList","selectedUserList","setSelectedUserList","toggled","setToggled","isModalOpen","setIsModalOpen","loading","setLoading","ACCESS_TOKEN","localStorage","getItem","REFRESH_TOKEN","baseUrl","getUsers","getUser","Authorization","e","alert","data","userResponses","map","user","index","id","loadUserSearchList","search","response","status","put","undefined","headers","then","res","access_token","setItem","onClickLeft","userInfo","find","filter","onClickRight","onSearchChange","target","value","onLeftModalClose","onRightModalClose","rightModalOpen","renderSelectedUser","selectedUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LeftUserMapping from \"./UserList/LeftUserMapping\";\r\nimport LoadingPage from \"../LoadingPage\";\r\nimport RightUserMapping from \"./UserList/RightUserMapping\";\r\nimport * as S from \"../../styled/ReportWriting/Modal/ReportWritingModalStyle\";\r\nimport { Close, searchImg, NowTeam, clickNT } from \"../../../assets\";\r\nimport { request } from \"../../../utils/axios/axios\";\r\nimport axios from \"axios\";\r\n\r\nconst ReportWritingModal = ({\r\n  setOpen,\r\n  setMyHei,\r\n  open,\r\n  myHei,\r\n  opas,\r\n  searchList,\r\n  setSearchList,\r\n  selectedUserList,\r\n  setSelectedUserList,\r\n}) => {\r\n  const [toggled, setToggled] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(\"hidden\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const ACCESS_TOKEN = localStorage.getItem(\"access-token\");\r\n  const REFRESH_TOKEN = localStorage.getItem(\"refresh-token\");\r\n  const baseUrl = \"http://211.38.86.92\";\r\n\r\n  useEffect(() => {\r\n    async function getUsers(getUser) {\r\n      try {\r\n        getUser = await request(\"get\", `/account?name=`, {\r\n          Authorization: `Bearer ${ACCESS_TOKEN}`,\r\n        });\r\n        setLoading(false);\r\n      } catch (e) {\r\n        alert(e);\r\n      }\r\n      setSearchList(\r\n        getUser.data.userResponses.map((user, index) => ({\r\n          id: index + 1,\r\n          user,\r\n        }))\r\n      );\r\n    }\r\n    getUsers();\r\n  }, [ACCESS_TOKEN, setSearchList]);\r\n\r\n  if (loading) return <LoadingPage />;\r\n\r\n  const loadUserSearchList = async (search) => {\r\n    try {\r\n      let response = await request(\"get\", `/account?name=${search}`, {\r\n        Authorization: `Bearer ${ACCESS_TOKEN}`,\r\n      });\r\n      setSearchList(\r\n        response.data.userResponses.map((user, index) => ({\r\n          id: index + 1,\r\n          user,\r\n        }))\r\n      );\r\n      setLoading(false);\r\n    } catch (e) {\r\n      switch (e.data.status) {\r\n        case 400:\r\n          alert(\"\");\r\n          break;\r\n        case 401:\r\n          axios\r\n            .put(`${baseUrl}:8005/auth`, undefined, {\r\n              headers: {\r\n                \"X-Refresh-Token\": REFRESH_TOKEN,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              if (res.data.access_token) {\r\n                localStorage.setItem(\"access-token\", ACCESS_TOKEN);\r\n              }\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClickLeft = (id, userInfo) => {\r\n    const user = selectedUserList.find((user) => {\r\n      if (user.id === id) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (!user) {\r\n      setSelectedUserList([userInfo, ...selectedUserList]);\r\n    } else {\r\n      setSelectedUserList(selectedUserList.filter((user) => user.id !== id));\r\n    }\r\n  };\r\n\r\n  const onClickRight = (id) => {\r\n    setSelectedUserList(selectedUserList.filter((user) => user.id !== id));\r\n  };\r\n\r\n  const onSearchChange = (e) => {\r\n    loadUserSearchList(e.target.value);\r\n  };\r\n\r\n  const onLeftModalClose = () => {\r\n    setOpen(\"hidden\");\r\n    setMyHei(\"0\");\r\n  };\r\n\r\n  const onRightModalClose = () => {\r\n    setIsModalOpen(\"hidden\");\r\n    setToggled(!toggled);\r\n  };\r\n\r\n  const rightModalOpen = () => {\r\n    setToggled(!toggled);\r\n    setIsModalOpen(\"visible\");\r\n  };\r\n\r\n  const renderSelectedUser = () => {\r\n    return selectedUserList.map((selectedUser) => {\r\n      return (\r\n        <RightUserMapping\r\n          key={selectedUser.id}\r\n          selectedUser={selectedUser}\r\n          onClickRight={onClickRight}\r\n          selectedUserList={selectedUserList}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.Div visibility={open}>\r\n        <S.LeftModalMain height={myHei} opas={opas}>\r\n          <S.LeftModalSort>\r\n            <S.LeftCloseBtn onClick={onLeftModalClose}>\r\n              <span>\r\n                {toggled === !true && <img src={Close} alt=\"Close\" />}\r\n              </span>\r\n            </S.LeftCloseBtn>\r\n            <S.SearchInput>\r\n              <S.BorderInput>\r\n                <div>\r\n                  <span>\r\n                    <input type=\"text\" onChange={onSearchChange} />\r\n                    <img src={searchImg} alt=\"search\" />\r\n                  </span>\r\n                </div>\r\n              </S.BorderInput>\r\n            </S.SearchInput>\r\n            <S.LeftSearchResult>\r\n              {searchList &&\r\n                searchList.map((userInfo) => {\r\n                  return (\r\n                    <LeftUserMapping\r\n                      key={userInfo.id}\r\n                      userInfo={userInfo}\r\n                      onClickLeft={onClickLeft}\r\n                      selectedUserList={selectedUserList}\r\n                    />\r\n                  );\r\n                })}\r\n            </S.LeftSearchResult>\r\n            <S.TeamState>\r\n              <S.BorderState onClick={rightModalOpen}>\r\n                <span>현재 팀 상태</span>\r\n                {toggled === true ? (\r\n                  <div>\r\n                    <img src={clickNT} alt=\"clickNT\" />\r\n                  </div>\r\n                ) : (\r\n                  <img src={NowTeam} alt=\"NowTeam\" />\r\n                )}\r\n              </S.BorderState>\r\n            </S.TeamState>\r\n          </S.LeftModalSort>\r\n        </S.LeftModalMain>\r\n        {toggled && (\r\n          <S.RightModalMain visibility={isModalOpen}>\r\n            <S.RightModalSort>\r\n              <S.RightCloseBtn>\r\n                <span>\r\n                  <img src={Close} alt=\"Close\" onClick={onRightModalClose} />\r\n                </span>\r\n              </S.RightCloseBtn>\r\n              <S.RightSearchResult>{renderSelectedUser()}</S.RightSearchResult>\r\n            </S.RightModalSort>\r\n          </S.RightModalMain>\r\n        )}\r\n      </S.Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportWritingModal;\r\n"]},"metadata":{},"sourceType":"module"}